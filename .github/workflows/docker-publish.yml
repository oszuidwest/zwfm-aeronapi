name: Docker
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: false
        default: ''
  workflow_call:
    inputs:
      version:
        description: 'Version to build'
        required: true
        type: string
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Detect version
        id: version
        run: |
          # Priority: workflow input > tag > edge
          if [ -n "${{ inputs.version }}" ]; then
            VERSION="${{ inputs.version }}"
          elif [ "${{ github.ref_type }}" = "tag" ]; then
            VERSION="${{ github.ref_name }}"
          else
            VERSION="edge"
          fi
          
          # Set outputs
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "version_without_v=${VERSION#v}" >> $GITHUB_OUTPUT
          echo "is_prerelease=$([[ "$VERSION" =~ -(edge|alpha|beta|rc|pre|dev) ]] || [[ "$VERSION" == "edge" ]] && echo true || echo false)" >> $GITHUB_OUTPUT
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }},enable=${{ steps.version.outputs.is_prerelease == 'false' }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.version }},enable=${{ steps.version.outputs.is_prerelease == 'false' }}
            type=raw,value=latest,enable=${{ steps.version.outputs.is_prerelease == 'false' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}
            type=raw,value=edge,enable=${{ steps.version.outputs.is_prerelease == 'true' || (github.event_name == 'workflow_dispatch' && inputs.version == '') }}
      - name: Set build time
        id: buildtime
        run: echo "time=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
            COMMIT=${{ github.sha }}
            BUILD_TIME=${{ steps.buildtime.outputs.time }}
          provenance: false
          sbom: false
